syntax = "proto3";

package gatesvr.proto;

option go_package = "gatesvr/proto";

// 上游服务接口定义
service UpstreamService {
  // 处理业务请求
  rpc ProcessRequest(UpstreamRequest) returns (UpstreamResponse);
  
  // 获取服务状态
  rpc GetStatus(StatusRequest) returns (StatusResponse);
}

// 网关服务接口定义 - 供上游服务调用
service GatewayService {
  // 单播推送消息到指定客户端
  rpc PushToClient(UnicastPushRequest) returns (UnicastPushResponse);
  
  // 批量单播推送消息
  rpc BatchPushToClients(BatchUnicastPushRequest) returns (BatchUnicastPushResponse);
}

// 上游请求消息
message UpstreamRequest {
  string session_id = 1;       // 会话ID
  string openid = 2;           // (新增) 用户的唯一标识
  string action = 3;           // 操作类型
  map<string, string> params = 4; // 参数
  bytes data = 5;              // 原始数据
  map<string, string> headers = 6; // 请求头
  uint64 client_seq_id = 7;    // 客户端序列号
}

// 上游响应消息
message UpstreamResponse {
  int32 code = 1;              // 响应码
  string message = 2;          // 响应消息
  bytes data = 3;              // 响应数据
  map<string, string> headers = 4; // 响应头
  uint64 client_seq_id = 5;    // 对应的客户端序列号
  uint64 server_seq_id = 6;    // 上游服务生成的序列号
}

// 状态请求消息
message StatusRequest {
  string service_name = 1;     // 服务名称
}

// 状态响应消息
message StatusResponse {
  string status = 1;           // 服务状态
  int64 uptime = 2;           // 运行时间（秒）
  int32 active_connections = 3; // 活跃连接数
  map<string, string> metadata = 4; // 额外元数据
}

// 单播推送请求
message UnicastPushRequest {
  string target_type = 1;      // 目标类型: session, gid, openid
  string target_id = 2;        // 目标标识符
  string msg_type = 3;         // 消息类型
  string title = 4;            // 推送标题
  string content = 5;          // 推送内容
  bytes data = 6;              // 额外数据
  map<string, string> metadata = 7; // 元数据
}

// 单播推送响应
message UnicastPushResponse {
  bool success = 1;            // 是否成功
  string message = 2;          // 响应消息
  string error_code = 3;       // 错误代码（如果有）
}

// 批量单播推送请求
message BatchUnicastPushRequest {
  repeated UnicastTarget targets = 1; // 目标列表
  string msg_type = 2;         // 消息类型
  string title = 3;            // 推送标题
  string content = 4;          // 推送内容
  bytes data = 5;              // 额外数据
  map<string, string> metadata = 6; // 元数据
}

// 单播目标
message UnicastTarget {
  string target_type = 1;      // 目标类型: session, gid, openid
  string target_id = 2;        // 目标标识符
}

// 批量单播推送响应
message BatchUnicastPushResponse {
  int32 success_count = 1;     // 成功数量
  int32 total_count = 2;       // 总数量
  repeated UnicastResult results = 3; // 详细结果
}

// 单播结果
message UnicastResult {
  string target_type = 1;      // 目标类型
  string target_id = 2;        // 目标标识符
  bool success = 3;            // 是否成功
  string error_message = 4;    // 错误信息（如果有）
}